<%- include('./partials/_header.ejs') -%>


<section id="singularEvent">
      <div class="container py-4">
         <div class="row py-5">
            <div class="col-lg-12">
              <div class="container">
             
               <div class="d-flex align-items-center justify-content-between">
                  <h1 class="fs-1"><%=findEvent.title%></h1> <br/>
                  <h1 class="fs-4 text-secondary text-capitalize"><svg xmlns="http://www.w3.org/2000/svg" width="21" height="21" fill="currentColor" class="bi bi-geo-fill" viewBox="0 0 16 16">
                     <path fill-rule="evenodd" d="M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999zm2.493 8.574a.5.5 0 0 1-.411.575c-.712.118-1.28.295-1.655.493a1.3 1.3 0 0 0-.37.265.3.3 0 0 0-.057.09V14l.002.008.016.033a.6.6 0 0 0 .145.15c.165.13.435.27.813.395.751.25 1.82.414 3.024.414s2.273-.163 3.024-.414c.378-.126.648-.265.813-.395a.6.6 0 0 0 .146-.15l.015-.033L12 14v-.004a.3.3 0 0 0-.057-.09 1.3 1.3 0 0 0-.37-.264c-.376-.198-.943-.375-1.655-.493a.5.5 0 1 1 .164-.986c.77.127 1.452.328 1.957.594C12.5 13 13 13.4 13 14c0 .426-.26.752-.544.977-.29.228-.68.413-1.116.558-.878.293-2.059.465-3.34.465s-2.462-.172-3.34-.465c-.436-.145-.826-.33-1.116-.558C3.26 14.752 3 14.426 3 14c0-.599.5-1 .961-1.243.505-.266 1.187-.467 1.957-.594a.5.5 0 0 1 .575.411"/>
                   </svg> <%=findEvent.cityName%>, <%=findEvent.districtName%></h1>
               </div>
            
               <hr />
               <div class="row align-items-center">
                  <div class="col-lg-1">
                     <p class="fs-5 flex-grow-1">Etkinlik Kurucusu: </p> 
                  </div>
                  <div class="col-lg-1">
                     <div class="d-flex flex-column align-items-center">
                        <a class="text-center text-dark" href="../members/<%=findOrganizer.id%>">
                          <% if (user.membershipLevel === "premium") { %>
                            <div class="image-container w-100">
                              <div class="overlay" style="right: 0; bottom: 0;" id="chat-premium-member">e+</div>
                              <img src="../<%=findOrganizer.profileImage%>" class="img-fluid rounded-circle" style="width: 50px; height: 50px;" alt="profileimage" />
                           
                            </div>
                       <% } else { %>
                        <img src="../<%=findOrganizer.profileImage%>" class="img-fluid rounded-circle" style="width: 50px; height: 50px;"  alt="profileimage" />
                    <%   } %>
                        
                        <h1 class="fs-5"><%= (user && user.username === findOrganizer.username) ? 'Siz' : findOrganizer.username.toUpperCase() %>
                        </h1>
                     </a>
                       </div>
                  </div>
      
               
              </div>
              
              </div>
            </div>
         </div>

         <div class="row gx-5 my-5">
            <div class="col-lg-8">
               <div class="text-center mb-4">
                  <img src="../<%=findEvent.eventImage%>" width="100%" class="rounded" alt="event image">
                </div>
                <% function capitalizeFirstLetter(str) { %>
                <%  return str.charAt(0).toUpperCase() + str.slice(1); %>
               <% } %>
                <b class="fw-bold fs-4 d-block mb-3">Detaylar</b> 
                <hr />
                <div class="fs-5 text-dark">
                  <%= findEvent.description %>
                </div>
            </div>

            <div class="col-lg-4 py-1">
               <div class="d-inline-flex flex-column w-100">
                  <div class="d-flex align-items-center justify-content-between">
                     <h3 class="fs-3">Katılanlar(<%=findEvent.attendees.length%>)</h3>
                  
         
                     <% if(findEvent.participantLimit !== null) { %>
                        <%  if(findEvent.attendees.length >= findEvent.participantLimit ) { %>
                              <div class="d-flex align-items-center">
                                 <h1 class="fs-5">Sınır (Doldu)</h1>
                                 <a tabindex="0" class=" rounded-circle" role="button" data-bs-toggle="popover" data-bs-trigger="focus" data-bs-content="Bu etkinliğin organizatörü bir katılımcı sınırlaması eklemiş.">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="rounded-circle bi bi-exclamation-lg" viewBox="0 0 16 16">
                                       <path d="M7.005 3.1a1 1 0 1 1 1.99 0l-.388 6.35a.61.61 0 0 1-1.214 0zM7 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0"/>
                                     </svg>
                                 </a>
                                </div>
                         <%  } else { %>
                              <div class="d-flex align-items-center">
                                 <h1 class="fs-5">Sınır (<%=findEvent.participantLimit - findEvent.attendees.length%> Kaldı)</h1>
                                 <a tabindex="0" class=" rounded-circle" role="button" data-bs-toggle="popover" data-bs-trigger="focus" data-bs-content="Bu etkinliğin organizatörü bir katılımcı sınırlaması eklemiş.">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="rounded-circle bi bi-exclamation-lg" viewBox="0 0 16 16">
                                       <path d="M7.005 3.1a1 1 0 1 1 1.99 0l-.388 6.35a.61.61 0 0 1-1.214 0zM7 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0"/>
                                     </svg>
                                 </a>
                                </div>
                          <% } %>
               
                   <%  } %>
                
                  </div>
      
                 <% if(findEvent.attendees.length > 0) { %>
                  <div class="gray-background w-100 my-3">
                     <% findAttendeeUsers.map((attendee) => { %>
                        <div class="d-flex flex-column justify-content-center align-items-center">
                           <a class="text-center text-dark" href="../members/<%=attendee.id%>">
                            <% if(attendee.membershipLevel === "premium") { %>
                              <div class="image-container w-100">
                                <div class="overlay" style="right: 0; bottom: 0;" id="chat-premium-member">e+</div>
                                 <img src="<%=attendee.profileImage%>" class="rounded-circle img-fluid" style="width: 50px; height:50px;"  alt="attendee image">
                              </div>
                           <% } else { %>
                            <img src="<%=attendee.profileImage%>" class="rounded-circle img-fluid" style="width: 50px; height:50px;"  alt="attendee image">
                         <%  } %>
                        
                           <h1 class="fs-5 text-center"><%=(user && user.username === attendee.username) ? 'Siz' : attendee.username.charAt(0).toUpperCase() + attendee.username.slice(1) + (attendee._id.equals(findEvent.organizer) ? ' (Kurucu)' : '')%></h1>
                           </a>
                        </div>
                     <% }) %>
                  </div>
                  <% } else { %>
                     <div class="fs-4 py-5 d-inline-flex text-secondary">
                        <h1>İlk katılımcısı sen olmak ister misin?</h1>
                       </div>
                <%  } %>
              
              </div>
              <% if (findEvent.status === 'cancelled') { %>
               <h1 class="alert alert-info fs-5 py-3">Bu etkinlik organizatörü tarafından iptal edildi.</h1>
           <% } else if (new Date(findEvent.date) < new Date()) { %>
            <h1 class="alert alert-info fs-5 py-3">Bu etkinlik tamamlandı!</h1>
           <% } else if (checkUserAttend && !checkIfCurrentOrganizer) { %>
               <h1 class="fs-5 py-3">Bu etkinliğe gidiyorsunuz!</h1>
               <form action="/events/<%= findEvent._id %>/remove" method="post">
                   <button type="submit" class="btn btn-danger w-100">İptal</button>
               </form>
        
           <% } else if (checkUserAttend && checkIfCurrentOrganizer) { %>
               <h1 class="fs-5 py-3">Oluşturduğunuz Etkinliğiniz</h1>
               <form action="/events/<%= findEvent._id %>/cancelevent" method="post">
                   <button type="submit" class="btn btn-danger w-100">Etkinliği İptal Edin</button>
               </form>
           <% } else { %>
               <form action="/events/<%= findEvent._id %>/join" method="post" class="d-flex flex-column justify-content-around">
                   <button type="submit" class="btn btn-success my-4 px-3 py-2 float-right">Katıl</button>
               </form>
           <% } %>
           

               <% function formatDate(dateStr) { %>
                  <% const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }; %>
                  <% const formattedDate = new Date(dateStr).toLocaleDateString('tr-TR', options); %>
                  <% return formattedDate; %>
              <% } %>
               <p class="text-secondary-emphasis fs-5 py-4 fw-bold"><%=formatDate(findEvent.date)%></p>
              <% if (messages.success) { %>
               <div class="alert alert-success">
                 <%= messages.success %>
               </div>
             <% } %>
             
             <!-- Hata mesajı -->
             <% if (messages.error) { %>
               <div class="alert alert-danger">
                 <%= messages.error %>
               </div>
             <% } %>

              <div class="my-5">
                <h1 class="fs-5 fw-bold">Tam Adres</h1>
                <p class="fs-5 mt-2"><%=findEvent.fullAddress%></p>
              </div>
    
             <% if (user && checkUserAttend) { %>
               <h2 class="fs-5 text-center mt-5 mb-2">Katılımcılara Özel Sohbet</h2>
               <hr>
               <div class="chat-container">
                  <div id="chat-messages"></div>
                  <form id="chatForm">
                     <div class="input-wrapper">
                        <div class="input-group mb-3">
                              <input type="text" autocomplete="off" id="message-input" name="messageinput" class="form-control " placeholder="Mesajınızı Yazın..." aria-label="Recipient's username" aria-describedby="button-addon2">
                        
                              <button class="btn btn-dark rounded-end-2" type="submit" id="button-addon2">
                                 <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-send-fill" viewBox="0 0 16 16">
                                    <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 0-.154-.154l-.338-.215 7.494-7.494 1.178-.471z"/>
                                  </svg>
                              </button>
                              <span id="counter">(142)</span>
                           
                        </div>
                     </div>
                  </form>
               </div>
   
           <%  } %>
            </div>
         </div>
       
          <div class="row gx-5 my-5">
            <section class="p-0" 
            similar-events="<%= (typeof findSimilarEvents !== 'undefined') ? JSON.stringify(findSimilarEvents) : '{}' %>"
             id="similarEventsRoot">
            </section>
         </div>

         <% if (user) { %>
            <script>
              const isCurrentInAttendee =" <%= JSON.stringify(findAttendeeUsers.some(attendee => attendee.id.toString() === user._id.toString())) %>";
            </script>
          <% } %>
          
          

      </div>
   </section>

   <% if(user && checkUserAttend) { %>
      <script>
         if(typeof isCurrentInAttendee !== "undefined" && isCurrentInAttendee) {

          // establish websocket connection
            const ws = new WebSocket('ws://localhost:8080/?userId=<%= user && user._id %>');

    // GET CHAT FORM
   const chatForm = document.getElementById("chatForm");

   // User infos
   const userProfileImage = (`<%=user.profileImage.replace(/\\/g, '\\\\')%>`)
   const username = ('<%=user.username %>');
   const membershipLevel = ("<%=user.membershipLevel%>")
   const currentDate = new Date().toISOString().split('T')[0];
   // EXISTING MESSAGES
   const messagesBefore = ("<%= JSON.stringify(messages) %>")
   const decodedMessages = messagesBefore.replace(/&#34;/g, '"')
  .replace(/&quot;/g, '"')
  .replace(/\\(.)/g, "$1");

const parsedMessages = JSON.parse(decodedMessages);

      // Mesaj gönderme işlevi
      function sendMessage(message) {
             if (ws.readyState === WebSocket.OPEN) {
               ws.send(JSON.stringify({
                  username: username,
                  profileImage: userProfileImage,
                  message: message,
                  membershipLevel: membershipLevel,
                  date: currentDate
               }));
             } else {
                console.error('WebSocket bağlantısı açık değil.');
                // Bağlantıyı yeniden kurmayı deneyin veya kullanıcıya bir hata mesajı gösterin
             }
             }
             let userScrolled = false;

// Kullanıcının kaydırma çubuğunu elle kontrol ettiğini algılamak için bir olay dinleyicisi ekleyin
const chatMessages = document.getElementById('chat-messages');
chatMessages.addEventListener('scroll', function() {
  // Kullanıcının kaydırma çubuğunu en alttan uzaklaştırıp uzaklaştırmadığını kontrol edin
  if (chatMessages.scrollTop < chatMessages.scrollHeight - chatMessages.clientHeight) {
    userScrolled = true;
  } else {
    userScrolled = false;
  }
});

// Otomatik kaydırma işlevi
function scrollToBottom() {
  if (!userScrolled) {
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }
}

const blockedWords = ['orospu', 'çocuğu', 'piç', 'oç', 'kansız', 'lavuk', 'satılıktır', 'satılık', 'orospu evladı', 'yavşak', "ananı", "sikeyim", "sikiyorum", "göt", "meme", "taşşak", "daşşak", "yarrak", "kancık"];
let lastMessageTime = 0;

// Message SPAM HANDLER
function handleMessage(messageData) {
  const currentTime = Date.now();

  // Eğer 1 saniyeden az ise mesajı gönderme
  if (currentTime - lastMessageTime < 2000) {
    console.log('Çok hızlı mesaj gönderiyorsunuz.');
    return false;
  }
const message = messageData.message || messageData
  // Engellenmiş kelimeleri kontrol et
  const isBlocked = blockedWords.some(blockedWord => message.includes(blockedWord));
  
  if (isBlocked) {
    console.log('Engellenmiş bir kelime içeriyor: ', messageData.message || messageData);
    return false; // Eğer mesaj engellenmiş kelimeleri içeriyorsa gönderme
  }

  // Son mesaj zamanını güncelle
  lastMessageTime = currentTime;
  return true;
}


ws.onmessage = (event) => {
  const messageData = JSON.parse(event.data);
  if (handleMessage(messageData)) {
    const username = messageData.username;
    const profileImage = messageData.profileImage;
    const message = messageData.message;
    const membershipLevel = messageData.membershipLevel;
    const date = messageData.date;
    const chatMessages = document.getElementById('chat-messages');
    addMessage(message, profileImage, username, membershipLevel, date);
    scrollToBottom();
  }
};
const messageInput = document.getElementById("message-input")
const counter = document.getElementById("counter")
messageInput.addEventListener("input", countChange);
const maxLength = 142;

function countChange(e) {
  let remaining = maxLength - e.target.value.length;
  
  // Eğer kalan karakter sayısı negatifse, sıfıra eşitle
  if (remaining < 0) {
    remaining = 0;
    counter.style.color = 'red';
  } else {
    counter.style.color = 'black';
  }

  counter.textContent = '(' + remaining + ')';
}

// Başlangıçta sayacı güncelle
countChange({ target: { value: messageInput.value } });
    
    chatForm.addEventListener('submit', (event) => {
      event.preventDefault(); // Formun varsayılan davranışını önleyin
      const messageInput = event.target[0];
      const message = messageInput.value;

      if(handleMessage(message)) {
         counter.innerHTML = "(142)"
         if(message && message.length <= 142) {
            sendMessage(message); // Mesajı gönderin
             addMessage(message, userProfileImage, username, membershipLevel, currentDate)
         } else {
            console.log("180'DEN BÜYÜK")
         }
 
      }

      scrollToBottom();

      // Mesaj giriş alanını temizleyin
      messageInput.value = '';
    });

    // check if messages exists before
    if(parsedMessages && parsedMessages.length > 0) {
        parsedMessages.map((message) => {
  const profileImageModified =  message.profileImage.replace(/(?<=uploads)(?!\/)|(?<!\/)(?=profile)/g, "/");
          addMessage(message.content, profileImageModified, message.user, message.membershipLevel, message.date)
        })
    }

   
    function addMessage(message, profileImage, username, membershipLevel, date) {
      const now = new Date();
  let timeString = now.toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' });

    // Tarih karşılaştırması için gerekli olan dün ve yarının tarihlerini al
    const today = now.toDateString();
  const yesterday = new Date(now.setDate(now.getDate() - 1)).toDateString();
  const tomorrow = new Date(now.setDate(now.getDate() + 2)).toDateString();

    // Tarih karşılaştırmasını yap ve zaman stringini ayarla
    if (today === date) {
    timeString += ' Bugün';
  } else if (yesterday === date) {
    timeString += ' Dün';
  } else if (tomorrow === date) {
    timeString += ' Yarın';
  }

     const chatMessages = document.getElementById('chat-messages');
     const newMessage = document.createElement('ul');
     // li öğesi oluşturun
     const li = document.createElement('li');
     li.className = 'd-flex align-items-center justify-content-start bg-white py-2 my-2 rounded-2 border border-1';
      li.style.height = "75px";
     // Row div'i oluşturun
     const rowDiv = document.createElement('div');
     rowDiv.className = 'row w-100 m-0 p-0 text-center';
   
     // Col-3 div'i oluşturun ve user-info div'ini ekleyin
     const col3Div = document.createElement('div');
     col3Div.className = 'col-3 p-0 m-0';

     //********************IMAGE STYLES********************************


     const userInfoDiv = document.createElement('div');

      if(membershipLevel === "premium") {
         const createOverlay = document.createElement("div")
         createOverlay.className = "overlay";
         createOverlay.id = "chat-premium-member"
         createOverlay.textContent = "e+"
         userInfoDiv.className = 'image-container w-100';
         userInfoDiv.appendChild(createOverlay)
      }  else {

      }


     col3Div.appendChild(userInfoDiv);
   

     //**************************USERINFODIV****************************************
     // Resmi ekleyin
     const img = document.createElement('img');
     img.src = profileImage;
     img.alt = 'Profile Image';
     img.style.width = '40px'; // Sabit genişlik
      img.style.height = '40px'; // Sabit yükseklik
     img.className = " rounded-circle wm-25";
     userInfoDiv.appendChild(img);


   
     // Kullanıcı adını ekleyin
     const userPara = document.createElement('p');
     userPara.textContent = username;
     userInfoDiv.appendChild(userPara);
   

         //**************************COL-9 DIV****************************************
     // Col-9 div'i oluşturun ve mesaj içeriğini ekleyin
     const col9Div = document.createElement('div');
     col9Div.className = 'col-9 text-wrap word-break text-start p-0 d-flex';
     const messagePara = document.createElement('p');
     messagePara.textContent = message;
     messagePara.className = "text-wrap word-break overflow-wrap align-self-start"
     messagePara.style.width = "88%";
     messagePara.style.overflowWrap = 'break-word'; // overflow-wrap stilini ekleyin
     col9Div.appendChild(messagePara);

         // Saat bilgisini mesaja ekleyin
   const timePara = document.createElement('p');
   timePara.textContent = timeString;
   timePara.className = 'text-muted small align-self-end flex-shrink-1';
   col9Div.appendChild(timePara);

   
     // Col div'lerini row div'ine ekleyin
     rowDiv.appendChild(col3Div);
     rowDiv.appendChild(col9Div);
   
     // Row div'ini li öğesine ekleyin
     li.appendChild(rowDiv);
   
     // li öğesini ul öğesine ekleyin
     newMessage.appendChild(li);
   
     // ul öğesini sohbet mesajları div'ine ekleyin
     chatMessages.appendChild(newMessage);
   }
   
         }
       
   </script>
 <%  } %>



<%- include('./partials/_footer.ejs') -%>